{"version":3,"sources":["components/Form/Form.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/contacts/contactSlice.js","redux/store.js","helpers/getVisibleContacts.js","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","getVisibleContacts","allItems","filter","normalizedFilter","toLowerCase","item","name","includes","number","Section","title","children","className","styles","section","defaultProps","Form","contacts","useState","setName","setNumber","isLoading","handleChange","e","currentTarget","value","s","form","onSubmit","preventDefault","isNameHere","find","contact","isNumberHere","alert","toast","success","label","input","type","pattern","required","placeholder","onChange","button","disabled","Filter","target","Contact","data","id","isDeleting","href","onClick","ContactList","map","App","isFetching","setFilter","color","style","textAlign","position","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,mBCA7GD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,wB,mBCAxFD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,QAAU,+B,8ICCxDC,EAAaC,YAAU,CAClCC,YAAa,aACbC,UAAWC,YAAe,CACxBC,QAAS,iDAEXC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAEpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,SAAAS,GAAU,MAAK,CACpBJ,IAAI,YACJC,OAAQ,OACRI,KAAMD,IAERF,gBAAiB,CAAC,iBAMtBI,EAGErB,EAHFqB,sBACAC,EAEEtB,EAFFsB,yBACAC,EACEvB,EADFuB,yBC9BWC,EAAQC,YAAe,CAClCC,QAAQ,eACL1B,EAAWE,YAAcF,EAAW0B,SAEvCC,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9B5B,EAAW2B,gBAIfE,YAAeL,EAAMM,U,+BCdRC,G,MAAqB,SAACC,EAAUC,GAC3C,IAAMC,EAAmBD,EAAOE,cAChC,OAAOH,EAASC,QACd,SAAAG,GAAI,OACFA,EAAKC,KAAKF,cAAcG,SAASJ,IACjCE,EAAKG,OAAOD,SAASJ,Q,yCCFZ,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,KAKPF,EAAQM,aAAe,CACrBL,MAAO,I,qBC8DMM,EAtEF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,EAAwBC,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOV,EAAP,KAAeY,EAAf,KACA,EAAuC5B,IAAvC,mBAAOL,EAAP,KAAwBkC,EAAxB,KAAwBA,UAElBC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACL,SAATnB,GAAmBa,EAAQM,GAClB,UAATnB,GAAoBc,EAAUK,IAyBhC,OACE,uBAAMb,UAAWc,IAAEC,KAAMC,SAvBN,SAAAL,GACnBA,EAAEM,iBACF,IAAMC,EAAab,EAASc,MAC1B,SAAAC,GAAO,OAAIA,EAAQ1B,KAAKF,gBAAkBE,EAAKF,iBAE3C6B,EAAehB,EAASc,MAAK,SAAAC,GAAO,OAAIA,EAAQxB,SAAWA,KAE7DsB,GAAcG,EAChBC,MAAM,GAAD,OACAJ,EAAaxB,EAAO,IADpB,OAED2B,EAAe,IAAMzB,EAAS,GAF7B,6BAMLrB,EAAc,CAAEmB,OAAME,WACtB2B,IAAMC,QAAQ,uBAGhBjB,EAAQ,IACRC,EAAU,KAIV,UACE,wBAAOR,UAAWc,IAAEW,MAApB,iBAEE,uBACEzB,UAAWc,IAAEY,MACbC,KAAK,OACLjC,KAAK,OACLkC,QAAQ,yHACR9B,MAAM,sJACN+B,UAAQ,EACRC,YAAY,aACZjB,MAAOnB,EACPqC,SAAUrB,OAGd,wBAAOV,UAAWc,IAAEW,MAApB,mBAEE,uBACEzB,UAAWc,IAAEY,MACbC,KAAK,MACLjC,KAAK,QACLkC,QAAQ,yFACR9B,MAAM,+FACN+B,UAAQ,EACRC,YAAY,eACZjB,MAAOjB,EACPmC,SAAUrB,OAGd,wBAAQiB,KAAK,SAAS3B,UAAWc,IAAEkB,OAAQC,SAAUxB,EAArD,SACGA,EAAY,cAAgB,oB,iBCjDtByB,EAjBA,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,SAAUlB,EAAY,EAAZA,MAC1B,OACE,mBAAGb,UAAWc,IAAExB,OAAhB,SACE,wBAAOU,UAAWc,IAAEW,MAApB,0BAEE,uBACEzB,UAAWc,IAAEY,MACbC,KAAK,OACLG,YAAY,uBACZC,SAAU,SAAApB,GAAC,OAAIoB,EAASpB,EAAEwB,OAAOtB,QACjCA,MAAOA,U,iBCsBFuB,EA9BC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACT3C,EAAqB2C,EAArB3C,KAAME,EAAeyC,EAAfzC,OAAQ0C,EAAOD,EAAPC,GACtB,EAAmD3D,IAAnD,mBAAOV,EAAP,KAAmCsE,EAAnC,KAAwB9B,UAExB,OACE,sBAAKT,UAAWc,IAAEM,QAAlB,UACE,uBAAMpB,UAAWc,IAAEpB,KAAnB,UAA0BA,EAA1B,OACA,mBAAGM,UAAWc,IAAElB,OAAQ4C,KAAI,cAAS5C,GAArC,SACGA,IAEH,wBACEI,UAAWc,IAAEkB,OACbL,KAAK,SACLM,SAAUM,EACVE,QAAS,kBAAMxE,EAAcqE,IAJ/B,SAMGC,EAAa,cAAgB,e,iBCHvBG,EAdK,SAAC,GAAkB,IAAhBrC,EAAe,EAAfA,SACrB,OACE,qBAAKL,UAAWc,IAAET,SAAlB,SACE,6BACGA,EAASsC,KAAI,SAAAvB,GAAO,OACnB,oBAAqBpB,UAAWc,IAAEM,QAAlC,SACE,cAAC,EAAD,CAASiB,KAAMjB,KADRA,EAAQkB,YCEdM,EAAM,WACjB,MAA6BlE,IAArB2D,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,WACd,EAA4BvC,mBAAS,IAArC,mBAAOhB,EAAP,KAAewD,EAAf,KAEA,OACE,qCACE,cAACjD,EAAD,CAASC,MAAM,YAAf,SACE,cAAC,EAAD,CAAMO,SAAUgC,MAElB,eAACxC,EAAD,CAASC,MAAM,WAAf,UACE,cAAC,EAAD,CAAQiC,SAAUe,EAAWjC,MAAOvB,IACnC+C,GAAQ,cAAC,EAAD,CAAahC,SAAUjB,EAAmBiD,EAAM/C,KACxDuD,GACC,cAAC,IAAD,CAAQlB,KAAK,OAAOoB,MAAM,UAAUC,MAAO,CAAEC,UAAW,eAG5D,cAAC,IAAD,CAAgBC,SAAS,YAAYC,UAAW,UCnBtDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzE,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ0E,SAASC,eAAe,W","file":"static/js/main.8ae6856d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\",\"button\":\"Contact_button__1wUL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61ba064d48df2f0017e5a8a4.mockapi.io/',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { contactApi } from './contacts/contactSlice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n","export const getVisibleContacts = (allItems, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allItems.filter(\n    item =>\n      item.name.toLowerCase().includes(normalizedFilter) ||\n      item.number.includes(normalizedFilter),\n  );\n};\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useCreateContactMutation } from '../../redux/contacts/contactSlice';\nimport s from './Form.module.css';\n\nconst Form = ({ contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'phone' && setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isNameHere = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const isNumberHere = contacts.find(contact => contact.number === number);\n\n    if (isNameHere || isNumberHere) {\n      alert(\n        `${isNameHere ? name : ''}${\n          isNumberHere ? ' ' + number : ''\n        } is already in contacts`,\n      );\n    } else {\n      createContact({ name, number });\n      toast.success('Contact was added!');\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button} disabled={isLoading}>\n        {isLoading ? 'Creating...' : 'Add contact'}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <p className={s.filter}>\n      <label className={s.label}>\n        Find contacts\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Enter name or number\"\n          onChange={e => onChange(e.target.value)}\n          value={value}\n        ></input>\n      </label>\n    </p>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactSlice';\nimport s from './Contact.module.css';\n\nconst Contact = ({ data }) => {\n  const { name, number, id } = data;\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <div className={s.contact}>\n      <span className={s.name}>{name}:</span>\n      <a className={s.number} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => deleteContact(id)}\n      >\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport Contact from '../Contact';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <div className={s.contacts}>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.contact}>\n            <Contact data={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useFetchContactsQuery } from './redux/contacts/contactSlice';\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getVisibleContacts } from './helpers/getVisibleContacts';\nimport Loader from 'react-loader-spinner';\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nexport const App = () => {\n  const { data, isFetching } = useFetchContactsQuery();\n  const [filter, setFilter] = useState('');\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form contacts={data} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter onChange={setFilter} value={filter} />\n        {data && <ContactList contacts={getVisibleContacts(data, filter)} />}\n        {isFetching && (\n          <Loader type=\"Puff\" color=\"#7dcdff\" style={{ textAlign: 'center' }} />\n        )}\n      </Section>\n      <ToastContainer position=\"top-right\" autoClose={3000} />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}