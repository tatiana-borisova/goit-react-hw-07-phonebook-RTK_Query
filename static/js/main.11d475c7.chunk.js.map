{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js","components/Form/Form.module.css","components/Contact/Contact.module.css"],"names":["module","exports","actions","onSubmitHandler","createAction","deleteContact","onChangeFilter","items","createReducer","state","payload","filter","id","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","devTools","process","allStore","persistor","persistStore","Section","title","children","className","styles","section","defaultProps","getFilter","getItems","getVisibleContacts","allItems","normalizedFilter","toLowerCase","item","name","includes","number","Form","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","s","form","onSubmit","preventDefault","isNameHere","find","contact","isNumberHere","alert","shortid","generate","label","input","type","pattern","required","placeholder","onChange","button","Filter","Contact","data","href","onClick","ContactList","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.11d475c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst onSubmitHandler = createAction('contacts/submit');\n\nconst deleteContact = createAction('contacts/delete');\n\nconst onChangeFilter = createAction('contacts/changeFilter');\n\nconst actions = { onSubmitHandler, deleteContact, onChangeFilter };\n\nexport default actions;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.onSubmitHandler]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.onChangeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './contacts/contacts-reduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst allStore = { store, persistor };\n\nexport default allStore;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","export const getFilter = state => state.contacts.filter;\nexport const getItems = state => state.contacts.items;\nexport const getVisibleContacts = state => {\n  const allItems = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return allItems.filter(\n    item =>\n      item.name.toLowerCase().includes(normalizedFilter) ||\n      item.number.includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItems } from '../../redux/contacts/contacts-selectors';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Form.module.css';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItems);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isNameHere = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const isNumberHere = contacts.find(\n      contact => contact.number.toLowerCase() === number.toLowerCase(),\n    );\n    isNameHere || isNumberHere\n      ? alert(\n          `${isNameHere ? name : ''} ${\n            isNumberHere ? number : ''\n          } is already in contacts`,\n        )\n      : dispatch(\n          actions.onSubmitHandler({ id: shortid.generate(), name, number }),\n        );\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <p className={s.filter}>\n      <label className={s.label}>\n        Find contacts\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Enter name or number\"\n          value={value}\n          onChange={e =>\n            dispatch(actions.onChangeFilter(e.currentTarget.value))\n          }\n        ></input>\n      </label>\n    </p>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Contact.module.css';\n\nconst Contact = ({ data }) => {\n  const { name, number, id } = data;\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.contact}>\n      <span className={s.name}>{name}:</span>\n      <a className={s.number} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => dispatch(actions.deleteContact(id))}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Contact from '../Contact';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <div className={s.contacts}>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.contact}>\n            <Contact data={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import Section from './components/Section';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <>\n    <Section title=\"Phonebook\">\n      <Form />\n    </Section>\n    <Section title=\"Contacts\">\n      <Filter />\n      <ContactList />\n    </Section>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport allStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={allStore.store}>\n      <PersistGate loading={null} persistor={allStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\",\"button\":\"Contact_button__1wUL0\"};"],"sourceRoot":""}